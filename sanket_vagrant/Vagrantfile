$samplescript = <<SCRIPT
echo '- Updating apt-get repositories...'
sudo apt-get update
echo '...done'
echo '- Installing Apache 2...'
sudo apt-get install -y apache2
echo '...done'
sudo apt-get install --force-yes memcached
sudo apt-get install --force-yes libmemcached-tools
echo '...done'
echo '...cronenty for memcahced'

echo '- Setting up Apache2 virtual host...'
# Remove /var/www default
sudo rm -rf /var/www
# Symlink /vagrant to /var/www
sudo ln -fs /vagrant /var/www
# Add ServerName to httpd.conf
sudo echo "ServerName localhost" >> /etc/apache2/apache2.conf
# Setup hosts file
VHOST=$(cat <<EOF
<VirtualHost *:80>
        ServerName localhost
        Redirect / https://localhost/
        DocumentRoot "/var/www/html"
        <Directory "/var/www/html">
                Options +ExecCGI -Indexes +Includes -FollowSymLinks +SymLinksIfOwnerMatch +MultiViews
        AllowOverride All
        Order allow,deny
        Allow from all
        </Directory>
        ErrorLog /error.log
    CustomLog /access.log combined

RewriteEngine on
RewriteCond %{SERVER_PORT} !^443$
RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,QSA,R=permanent]

</VirtualHost>

<VirtualHost *:443>
SSLEngine on
SSLCertificateFile /etc/apache2/localhost/server.crt
SSLCertificateKeyFile /etc/apache2/localhost/server.key
CustomLog logs/ssl_request_log \
   "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"
ServerName localhost
DocumentRoot /var/www/html
<Directory /var/www/html>
                AllowOverride All
                Order allow,deny
                allow from all
</Directory>
</VirtualHost>
EOF
)
echo "${VHOST}" > /etc/apache2/sites-available/000-default
sudo ln -s ../sites-available/000-default  /etc/apache2/sites-enabled/000-default
sudo mkdir /var/www/app
ASSIGN=$(cat <<EOF
<html>
<header><title>Vagrant Assignment</title></header>
<body>
Vagrant Assignment
</body>
</html>
EOF
)
echo "${ASSIGN}" > /var/www/app/index.html
# Enable mod_rewrite
sudo a2enmod rewrite
# Restart apache
sudo service apache2 restart
echo '...done'
SCRIPT

# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "ubuntu/trusty64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
   config.vm.network "forwarded_port", guest: 443, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
    config.vm.provision "shell", inline: $samplescript
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
  

  

end
